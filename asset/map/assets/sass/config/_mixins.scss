// ====================
// Fonts Family
// Input: $type (font-family)
// Output: Font-family
// Ex: @include wp-font(font-body)
// ==> font-family: $font-body; font-weight: $font-weight-bold;
// ---
@mixin wp-font($type){
    @if $type == font-body{
        font-family: $font-body;
        font-weight: $font-weight-body;
    }
    @else if $type == font-bold{
        font-family: $font-bold;
        font-weight: $font-weight-bold;
    }
    @else if $type == font-medium{
        font-family: $font-medium;
        font-weight: $font-weight-medium;
    }
    @else if $type == font-light{
        font-family: $font-light;
        font-weight: $font-weight-light;
    }
    @else if $type == font-black{
        font-family: $font-black;
        font-weight: $font-weight-black;
    }
}

// ====================
// Fonts Size Rem
// Input: $type (Property css), $size (Value Px)
// Output: $type: convert to $rem
// ---
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}

// Ex: @include sizeRem(font-size, 10px);
// ==> font-size: 0.625rem;
// Ex: @include sizeRem(padding-top, 10px, true);
// ==> padding-top: 0.625rem !important;
@mixin sizeRem($type, $size, $important: false) {
  @if $important{
    #{$type}: calculateRem($size) !important;  
  }
  @else {
    #{$type}: calculateRem($size);  
  }
}


// ====================
// Fonts Size Rem All (padding, margin,...)
// Input: $type (Property css), $top (Value Px for top), $right (Value Px for right), ...
// Output: $type: convert to $rem for top, right, bottom, left.
// Ex: @include sizeRem(padding, 10px, 5px, 4px, 2px);
// ==> padding: 0.625rem 0.3125rem 0.25rem 0.125rem;
// Ex: @include sizeRem(padding, 10px, 5px, 4px, 2px, true);
// ==> padding: 0.625rem 0.3125rem 0.25rem 0.125rem !important;
// ---
@mixin sizeRemAll($type,$top, $right, $bottom, $left, $important: false) {
    @if $important{
        #{$type}: calculateRem($top) calculateRem($right) calculateRem($bottom) calculateRem($left) !important;      
    }
    @else {
        #{$type}: calculateRem($top) calculateRem($right) calculateRem($bottom) calculateRem($left);      
    } 
}

// ====================
// Fonts Heade (padding, margin,...)
// Input: $type (Property css), $top (Value Px for top), $right (Value Px for right), ...
// Output: $type: convert to $rem for top, right, bottom, left.
// ---
@mixin headings{
    @each $header, $size in $list-header-size {
      #{$header},.#{$header} {
        @include sizeRem(font-size,$size);
      }
    }
    @each $header-line-height in $list-header-line-height {
      #{$header-line-height},.#{$header-line-height} {
        line-height: 1.1;
      }
    }
    @for $i from 1 through 6{
      h#{$i}, .h#{$i}{
        color: $title-color;
        @include sizeRemAll(margin,0px, 0px, 20px, 0px);
      }
    }
}

// ====================
// Read Icon List
// ----

@mixin icons($name, $width, $height, $type: true){
    .#{$name}{
        @include sizeRem(width, $width);
        @include sizeRem(height, $height);
        background-size: contain;
        background-position: center;
    }
    @if $type {
        .#{$name}{
            background: url('../images/#{$name}.svg') no-repeat;
        }
    }
    @else {
        .#{$name}{
            background: url('../images/#{$name}.png') no-repeat;
        }
    }
}




// ====================
// Mixins
// ---
@mixin clearfix {
    &:before,
    &:after {
        display: table;
        content: " ";
    }
    &:after {
        clear: both;
    }
}

@mixin border-radius-rem($size) {
    -webkit-border-radius: calculateRem($size);
    border-radius: calculateRem($size);
}

@mixin fontawesome {
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

// ====================
// Mixins Form
// ---
@mixin form-default-label {
    label {
        display: block;
        @include sizeRem(margin-bottom, 5px);
    }
}

@mixin form-default-input {
    border: 1px solid rgba($title-color, .3);
    @include border-radius-rem(3px);
    background-color: $white-color;
    color: $title-color;
    &:focus {
        border: 1px solid rgba($title-color, .6);
        outline: none;
    }
}

// ====================
// Mixins Buttons
// ---
@mixin btn {
    display: inline-block;
    @include border-radius-rem(3px);
    @include sizeRem(font-size, 16px);
    @include wp-font(font-bold);
    @include sizeRemAll(padding, 8px, 25px, 8px, 25px);
    background-color: $white-color;
    color: $body-color;
    @include transition(0.3s all);
    line-height: 1.42857143;
    &:hover,
    &:focus {
        background-color: $link-color;
        color: $white-color;
    }
}

@mixin btn-skin-default {
    background-color: $bg-color;
    color: $white-color;
    border-color: $bg-color;
    &:hover,
    &:focus {
        background: darken($bg-color, 10%);
        color: $white-color;
        border-color: darken($bg-color, 10%);
    }
}


// ====================
// Mixins Container bootstrap
// ---
@mixin container {
    padding:{
        @include sizeRem(left, 15px);
        @include sizeRem(right, 15px);
    }
    margin: 0 auto;
    @media (min-width: $desktop) {
        width: 1170px;
    }
    @media (min-width: $tablet-ht) and (max-width: $desktop - 1) {
        width: 970px;
    }
    @media (min-width: $tablet-vt) and (max-width: $tablet-ht - 1) {
        width: 750px;
    }
}


// ====================
// Mixins Flex
// ---
@mixin flex-row{
    @include display-flex;
    @include flex-wrap(wrap);
}

@mixin flex-col-xs {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
}
@mixin flex-width-col-xs($val){
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 $val;
    -ms-flex: 0 0 $val;
    flex: 0 0 $val;
    max-width: $val;
}


// ====================
// View grid Custom
// Using class: view-grid-1-cols, .... , view-grid-10-cols
// ---

$item-start: 1;
$item-end: 10;
$class-grid : view-grid;
$flex-parent: view-content;
$flex-item: views-row;
$percent: 1;
@function calculateView($size) {
  $remSize: percentage($size / 1140);
  @return $remSize;
}

@mixin margin-parent{
    margin:{
        @include sizeRem(left, -15px);
        @include sizeRem(right, -15px);
    }
}
@mixin padding-parent{
    margin:{
        left: calculateView(30) / 2;
        right: calculateView(30) / 2;
    }
    @include sizeRem(margin-bottom, 30px);
}

@mixin views-grid($type: true){
    @for $i from $item-start through $item-end {
        .#{$class-grid}-#{$i}-cols{
            .#{$flex-parent}{
                @include margin-parent;
                @if $type == true{
                    @include display-flex;
                    @include flex-wrap(wrap);
                }
            }
            .#{$flex-item}{
                @include padding-parent;
                @if $type == true{
                    @include flex-width-col-xs(percentage($percent / $i) - calculateView(30));
                    @include display-flex;
                    @include flex-direction(column);
                }
                @else if $type == false{
                    width: percentage($percent / $i) - calculateView(30);
                }
            }
        }
    }
}

// ====================
// Layout Header
// ---
@mixin flex-header($item-left, $item-right, $item-left-width, $item-right-width){
    @include display-flex;
    @include align-items(center);
    .#{$item-left}{
        @include flex-width-col-xs($item-left-width);
    }
    .#{$item-right}{
        @include flex-width-col-xs($item-right-width);
        @include display-flex;
        @include justify-content(flex-end);
        @include align-items(center);
    }
}


// ====================
// Mixins Effect
// ---
@-webkit-keyframes fadeInFromNone {
    from {
        display: none;
        opacity: 0;
    }
    to {
        display: block;
        opacity: 1;
    }
}

@-moz-keyframes fadeInFromNone {
    from {
        display: none;
        opacity: 0;
    }
    to {
        display: block;
        opacity: 1;
    }
}

@-o-keyframes fadeInFromNone {
    from {
        display: none;
        opacity: 0;
    }
    to {
        display: block;
        opacity: 1;
    }
}

@keyframes fadeInFromNone {
    from {
        display: none;
        opacity: 0;
    }
    to {
        display: block;
        opacity: 1;
    }
}

@mixin animated{
    @include animation-fill-mode(both);
    @include animation-duration(0.5s);
    @include animation-timing-function(cubic-bezier(0.0,
    0.0,
    1.0,
    1.0));
}

@mixin show-fade($class-show){
    display: none;
    &.#{$class-show} {
        display: block;
        @include animated;
        @include animation-name(fadeInFromNone);
    }
}

// ====================
// Mixins Effect
// $beta True = Drupal 8 Kmagic menu
// False = Drupal 7 tbmega menu
// ---
@mixin master-menu-reset($beta: true){
    @if $beta {
        .kmagic-menu-ul{
            position: static;
            .dropdown-menu{
                &:hover, &:focus{
                    position: relative;
                    > a{
                        color: #fd7e2d;
                        &:after{
                            border-top-color: #fd7e2d ;
                        }
                    }
                    > .kmagic-menu-submenu{
                        display: block; 
                        @include animated;
                        @include animation-name(fadeInFromNone);
                    }
                }
                .dropdown-menu{
                    > a:after{
                        border-top-color: #000000;
                        right: 0;
                    }
                }
            }
            > .dropdown-menu{
                &:hover, &:focus{
                    position: static;
                    > a.kmagic-menu-li{
                        background: #fd7e2d;
                        color: $white-color;
                    }
                    > .kmagic-menu-submenu{
                        top: 99%;   
                    }
                }
                > .kmagic-menu-submenu{
                    width: 100% !important;
                    > .kmagic-menu-submenu-inner{
                        @include container;
                        min-height: 180px;
                    }
                }
            }
            > .kmagic-menu-li{
                padding-bottom: 0;
                margin: 0;
                > a.kmagic-menu-li{
                    background-color: #013ca6;
                    border: 0 none;
                    @include sizeRemAll(padding, 18px, 10px, 18px, 10px);
                    @include border-radius(0);
                    color: $white-color;
                    @include sizeRem(font-size, 14px);
                    font-weight: bold;
                    &:after{
                        display: none;
                    }
                    &:hover, &:focus{
                        background: #fd7e2d;
                        border: 0 none;
                        color: $white-color;
                        text-decoration: none;
                        @include text-shadow(initial);
                    }
                }
                &:first-child{
                    > a{
                        font-size: 0;   
                        i{
                            margin-right: 0;
                        }
                    }
                }
                & + .kmagic-menu-li{
                    margin: 0; 
                }
            }
        }   
        .navbar-kmagic_menu{
            background-color: #013ca6;
            @include border-radius(0);
            @include sizeRem(padding-bottom, 1px);
            .container-fluid{
                @include container;
            }
            .kmagic-menu-group > .kmagic-menu-submenu{
                @include animation-name(initial !important);
            }
            a i{
                @include sizeRem(font-size, 20px);
            }
            .kmagic-menu-col > *{
                padding: 0;
            }

        }
        .kmagic-menu-col{
            border: 0 none;
        }
        .kmagic-menu-submenu{
            @include border-radius(0);
            background-color: $white-color;
            li.kmagic-menu-li{
                border-bottom: 0 none;
                @include border-radius(0);
                margin-bottom: 0;
                a{
                    @include border-radius(0);
                    color: $black-color;
                    font-weight: bold;
                    border: 0 none;
                    border-bottom: 1px solid #d8d8d8;
                    padding:{
                        left: 0;
                        right: 0;
                        @include sizeRem(top, 8px);
                        @include sizeRem(bottom, 8px);
                    }
                    @include sizeRem(margin-right, 10px);
                    &:hover, &:focus{
                        background-color: transparent;
                        color: #fd7e2d;
                        border-bottom: 1px solid #d8d8d8;
                        &:after{
                            border-top-color: #fd7e2d;
                        }
                    }
                }
                &:last-child{
                    border-bottom: 0 none;
                }
            }
        }
        .nav-tabs .dropdown-menu{
            margin: 0;
        }
    }
    @else {
        background-color: transparent;
        .nav > li > a{
            border-right: 0 none;
            &:hover, &:focus{
                background-color: transparent;
            }
        }
        .nav .open {
            > a, a:hover, a:focus{
                background-color: transparent;
                border-color: transparent;
            }
        }
    }
}
